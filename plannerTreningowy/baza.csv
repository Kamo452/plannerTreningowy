--  uzytkownicy
CREATE TABLE uzytkownicy (
  Id           AUTOINCREMENT PRIMARY KEY,
  login        TEXT(50)  NOT NULL UNIQUE,
  haslo        TEXT(88)  NOT NULL,
  imie         TEXT(50),
  wzrost       INTEGER,
  waga         INTEGER,
  plec         TEXT(10)  DEFAULT 'Other'
);

--  cwiczenia (Twoja tabela już istnieje – dopisuję IF NOT EXISTS tylko informacyjnie)
CREATE TABLE cwiczenia (
  Identyfik AUTOINCREMENT PRIMARY KEY,
  Nazwa     TEXT(100),
  grupa1    TEXT(50),
  grupa2    TEXT(50),
  Opis      MEMO
);

--  plany
CREATE TABLE plany (
  Id     AUTOINCREMENT PRIMARY KEY,
  UserId INTEGER,
  Nazwa  TEXT(100),
  Poziom TEXT(12),
  CONSTRAINT fk_user_plany FOREIGN KEY (UserId) REFERENCES uzytkownicy(Id) ON DELETE CASCADE
);

--  plan_cwiczenia
CREATE TABLE plan_cwiczenia (
  PlanId       INTEGER,
  CwiczenieId  INTEGER,
  Serie        INTEGER,
  Powt         INTEGER,
  Kolejnosc    INTEGER,
  CONSTRAINT pk_plan_ex PRIMARY KEY (PlanId, Kolejnosc),
  CONSTRAINT fk_plan     FOREIGN KEY (PlanId)      REFERENCES plany(Id)       ON DELETE CASCADE,
  CONSTRAINT fk_cwiczenie FOREIGN KEY (CwiczenieId) REFERENCES cwiczenia(Identyfik)
);

--  wykonane_treningi
CREATE TABLE wykonane_treningi (
  Id           AUTOINCREMENT PRIMARY KEY,
  PlanId       INTEGER,
  DataTreningu DATETIME,
  CONSTRAINT fk_plan_hist FOREIGN KEY (PlanId) REFERENCES plany(Id) ON DELETE CASCADE
);

--  nagrody
CREATE TABLE nagrody (
  Id             AUTOINCREMENT PRIMARY KEY,
  UserId         INTEGER,
  Opis           TEXT(100),
  DataPrzyznania DATETIME,
  CONSTRAINT fk_user_badge FOREIGN KEY (UserId) REFERENCES uzytkownicy(Id) ON DELETE CASCADE
);
